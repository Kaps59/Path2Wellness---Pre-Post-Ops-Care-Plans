{"ast":null,"code":"var _jsxFileName = \"F:\\\\Path2Wellness - ITP Project\\\\FRONTEND\\\\src\\\\components\\\\common\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  userType\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    const loginPath = userType === 'admin' ? '/admin/login' : '/login';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: loginPath,\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user type matches required type\n  if (userType && user.userType !== userType) {\n    const redirectPath = user.userType === 'admin' ? '/admin/dashboard' : '/dashboard';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"zEGFxQ50Ze7Wo58QBItO0ZM7uxw=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","userType","_s","isAuthenticated","user","loading","location","className","fileName","_jsxFileName","lineNumber","columnNumber","loginPath","to","state","from","replace","redirectPath","_c","$RefreshReg$"],"sources":["F:/Path2Wellness - ITP Project/FRONTEND/src/components/common/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, userType }) => {\n  const { isAuthenticated, user, loading } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    const loginPath = userType === 'admin' ? '/admin/login' : '/login';\n    return <Navigate to={loginPath} state={{ from: location }} replace />;\n  }\n\n  // Check if user type matches required type\n  if (userType && user.userType !== userType) {\n    const redirectPath = user.userType === 'admin' ? '/admin/dashboard' : '/dashboard';\n    return <Navigate to={redirectPath} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;EACpD,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIU,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKS,SAAS,EAAC,mBAAmB;MAAAP,QAAA,gBAChCF,OAAA;QAAKS,SAAS,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCb,OAAA;QAAAE,QAAA,EAAG;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEV;;EAEA;EACA,IAAI,CAACR,eAAe,EAAE;IACpB,MAAMS,SAAS,GAAGX,QAAQ,KAAK,OAAO,GAAG,cAAc,GAAG,QAAQ;IAClE,oBAAOH,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAED,SAAU;MAACE,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvE;;EAEA;EACA,IAAIV,QAAQ,IAAIG,IAAI,CAACH,QAAQ,KAAKA,QAAQ,EAAE;IAC1C,MAAMgB,YAAY,GAAGb,IAAI,CAACH,QAAQ,KAAK,OAAO,GAAG,kBAAkB,GAAG,YAAY;IAClF,oBAAOH,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAEI,YAAa;MAACD,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;EAEA,OAAOX,QAAQ;AACjB,CAAC;AAACE,EAAA,CA3BIH,cAAc;EAAA,QACyBH,OAAO,EACjCD,WAAW;AAAA;AAAAuB,EAAA,GAFxBnB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}